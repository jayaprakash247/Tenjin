apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-svt
spec:
  replicas: {{ .Values.svt.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-svt
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-svt
    spec:
      containers:
        - name: svt
          image: "svt"
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "{{ .Values.svt.resources.requests.memory }}"
              cpu: "{{ .Values.svt.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.svt.resources.limits.memory }}"
              cpu: "{{ .Values.svt.resources.limits.cpu }}"
          volumeMounts:
            - name: svt-data
              mountPath: /data  # Mount the PVC at /data in the container
            - name: svt-config
              mountPath: /etc/svt-config  # Mount configMap at /etc/svt-config
      imagePullSecrets:
        - name: tenjin  # Reference your image pull secret here
      volumes:
        - name: svt-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-svt-pvc  # Reference the PVC defined above
        - name: svt-config
          configMap:
            name: {{ .Release.Name }}-svt-config  # Reference ConfigMap if needed

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Release.Name }}-svt-pv
spec:
  capacity:
    storage: 1Gi  # Size of the volume
  accessModes:
    - ReadWriteOnce  # Define the access mode
  persistentVolumeReclaimPolicy: Retain  # Define the reclaim policy
  storageClassName: standard  # Match this with your PVC's storage class
  hostPath:
    path: "/mnt/data/{{ .Release.Name }}-svt"  # Local path for storage (Minikube in this case)
    type: DirectoryOrCreate  # Automatically create the directory if it doesn't exist

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-svt-pvc
spec:
  accessModes:
    - ReadWriteOnce  
  resources:
    requests:
      storage: 1Gi 
  storageClassName: standard  
  volumeMode: Filesystem  